GI-SVM is a sensitive method for predicting genomic islands based on unannotated sequence of a single genome.
The program is written in python 2.7.

The additional packages required include:
shogun (http://www.shogun-toolbox.org/)
scikit-learn (http://scikit-learn.org/stable/index.html)

To install scikit-learn, the following command can be used:
'pip install -U scikit-learn' or 'conda install scikit-learn'.
The detailed guideline for installation can be found in http://scikit-learn.org/stable/install.html.

The detailed guideline for installing shogun can be found in http://www.shogun-toolbox.org/doc/en/latest/installation.html.

Below is a sample command to run GI-SVM:
mkdir ./output/NC_003198
/usr/bin/time /usr/bin/python ./scripts/GI_SVM.py -N 0.9 -t 1 -k 6 -d ./output/NC_003198 -c 5  ./genome/NC_003198.fna -a > ./output/NC_003198/svm_std_NC_003198_6_1_0.9 2>&1 > ./output/NC_003198/std_NC_003198_6_1_0.9

Below are some explanations about the output:
The candidate Gis:
mergedRes_6(k-mer length)_1(kernel type)_0.9(mu)_5(cutoff, 5%)_5000(window size)_2500 (step size)
mergedRes_6(k-mer length)_1(kernel type)_0.9(mu)_5(cutoff, 5%)_5000(window size)_2500 (step size). embl
mergedRes_auto(use automatic threshold)_6(k-mer length)_1(kernel type)_0.9(mu)_10(automatic  cutoff, about 10%)_5000(window size)_2500 (step size)
mergedRes_auto(use automatic threshold)_6(k-mer length)_1(kernel type)_0.9(mu)_10(automatic  cutoff, about 10%)_5000(window size)_2500 (step size). Embl

Ranked list of all the sliding windows:
rankedRes_6(k-mer length)_1(kernel type)_0.9(mu)_0(no cutoff, all the windows are included)_5000(window size)_2500 (step size)

Selected lists of sliding windows via threshold:
selectRes_6(k-mer length)_1(kernel type)_0.9(mu)_5(cutoff, 5%)_5000(window size)_2500 (step size)
selectRes_auto(use automatic threshold)_6(k-mer length)_1(kernel type)_0.9(mu)_10(automatic  cutoff, about 10%)_5000(window size)_2500 (step size)

 
Output of the program:
std_*****  (for GI-SVM)
svm_std_********* (for one-class SVM in Shogun)


I am still trying to improve GI-SVM.
If you find bugs or have some suggestions, please do not hesitate to contact me.
